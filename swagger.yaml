openapi: 3.0.0
info:
  title: Classroom App API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9
servers:
  - url: http://localhost:5000
    description: back-end
  - url: http://localhost:3000
    description: front-end
  
paths:
  /users/getAllUsers/:
    get:
      summary: Returns a list of users.
      tags: [User]
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
               $ref: '#/components/schemas/User'
    
    post:
      summary: To add a new user record
      tags: [User]
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: New user is created
        '400':
          description: Error in new user creation.


  

  /users/{userId}:
    get:
      summary: Returns a particular user with given userId
      tags: [User]
      parameters: 
        - name: userId
          in: path
          required: true
          description: Autogenerated userId 
          schema:
            type: string
      responses: 
        '200':
          description: Successfully get the user
        '400':
          description: Error in getting the user
        '500':
          description: Cast to ObjectId failed for value
    
    delete:
      summary: Deletes a user
      tags: [User]
      parameters:
        - name: userId
          in: path
          required: true
          description: Autogenerated userid for user
          schema:
            type: string
      responses:
        '200':
          description: User deleted from backend
        '400':
          description: User does not exist.
        '500':
          description: Error

    patch:
      summary: Updates a user
      tags: [User]
      parameters:
        - name: userId
          in: path
          required: true
          description: Autogenerated userid
          schema:
            type: string
      requestBody:
        description: Information updated
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully.
        '400':
          description: User does not exist.
        '500':
          description: Error

  # /users/:
    


  /class/getAllClasses/:
    get:
      summary: Returns a list of classes.
      tags: [Class]
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Class'
    
    post:
      summary: Add a new Class
      tags: [Class]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Class'
      responses:
        '200':
          description: Class created successfully.
        '400':
          description: Error



  /class/{classId}:
    get:
      summary: Get a particular Class with given classId
      tags: [Class]
      description: Get class with classId
      parameters:
        - name: classId
          in: path
          required: true
          description: Autogenerated classId 
          schema: 
            type: string
      responses:
        '200':
          description: Retrived the class information successfully.
        '400':
          description: Class does not exist.
        '500':
          description: Cast to classId failed for value.

    delete:
        summary: Deletes a class
        tags: [Class]
        parameters:
          - name: classId
            in: path
            required: true
            description: Autogenrated classId
            schema: 
              type: string
        responses:
          '200':
            description: Class is deleted successfully.
          '400':
            description: Class does not exist.
          '500':
            description: Error
      
    patch:
      summary: Updates a class
      tags: [Class]
      parameters:
        - name: classId
          in: path
          required: true
          description: autogenerated classId
          schema: 
            type: string
      requestBody:
        description: Class Information is updated
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/Class'
      responses:
        '200':
          description: Class information updated successfully.
        '400':
          description: Class doesn't exist.
        '500':
          description: Error

  
  /classwork/getAllClassworks/:
    get:
      summary: Returns a list of all classworks assigned.
      tags: [Classwork]
      description: Optional extended description in CommonMark or HTML.
      responses:
        '200':    # status code
          description: A JSON array of all classworks
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string

    post:
      summary: Add a new classwork
      tags: [Classwork]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Classwork'
      responses:
        '200':
          description: Classwork created successfully.
        '400':
          description: Error


  /classwork/{classworkId}:
    get:
      summary: Get a particular classwork with given classworkId
      tags: [Classwork]
      description: Get a particular class
      parameters:
        - name: classworkId
          in: path
          required: true
          description: autogenerated classworkId 
          schema: 
            type: string
      responses:
        '200':
          description: Successfully get the classwork.
        '400':
          description: Classwork doesn't exist.
        '500':
          description: Cast to classworkId failed for value.

    delete:
        summary: Deletes a classwork
        tags: [Classwork]
        parameters:
          - name: classworkId
            in: path
            required: true
            description: Autogenerated classworkid
            schema: 
              type: string
        responses:
          '200':
            description: Deleted the classwork
          '400':
            description: Doesn't exist
          '500':
            description: Error
    patch:
      summary: Updates a classwork
      tags: [Classwork]
      parameters:
        - name: classworkId
          in: path
          required: true
          description: Autogenerated classworkid
          schema: 
            type: string
      requestBody:
        description: Information updated
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/Classwork'
      responses:
        '200':
          description: Classwork information updated
        '400':
          description: Doesn't exist
        '500':
          description: Error      





components:
  schemas:
    User:
      type: object
      required: 
        - username
        - password
        - email
        - token

      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
        token:
          type: string
        
    Class:
      type: object
      required: 
        - title
        - description
        - archived
        - teacher
        - students
        - owner
        - code

      properties:
        title:
          type: string
        description:
          type: string
        archived:
          type: boolean
          items: 
            type: string
        teacher:
          type: array
          items: 
            type: string
        students:
          type: array
          items: 
            type: string
        owner:
          type: string
        code:
          type: string

    Classwork:
      type: object
      required: 
        - title
        - description
        - class
        - author
        - types

      properties:
        title:
          type: string
        description:
          type: string
        class:
          type: object
          properties:
            id:
              type: string  
        author:
          type: object
          properties:
            id:
              type: string
        types:
          type: string
          enum: ['material', 'short answer', 'long answer', 'multiple choice', 'checkbox']
        answer:
          type: array
          items:
            type: string
        duedate:
          type: date
          pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
        options:
          type: array
          items:
            type: string
        